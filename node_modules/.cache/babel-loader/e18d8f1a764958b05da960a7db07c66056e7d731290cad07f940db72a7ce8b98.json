{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef } from \"react\";\nexport function useOnDraw(onDraw) {\n  _s();\n  const canvasRef = useRef(null);\n  function setCanvasRef(ref) {\n    if (!ref) return;\n    canvasRef.current = ref;\n    initmouseMoeListener();\n  }\n  function initmouseMoeListener() {\n    const mouseMoveListener = e => {\n      // console.log({ x : e.clientX, y : e.clientY});\n      const point = computePointInCanvas(e.clientX, e.clientY);\n      const ctx = canvasRef.current.getContext('2d');\n      if (onDraw) onDraw9;\n      console.log(point);\n    };\n    window.addEventListener(\"mousemove\", mouseMoveListener);\n  }\n  function computePointInCanvas(clientX, clientY) {\n    if (canvasRef.current) {\n      const boundingRect = canvasRef.current.getBoundingClientRect();\n      return {\n        x: clientX - boundingRect.left,\n        y: clientY - boundingRect.top\n      };\n    } else {\n      return null;\n    }\n  }\n  return setCanvasRef;\n}\n_s(useOnDraw, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");","map":{"version":3,"names":["useRef","useOnDraw","onDraw","canvasRef","setCanvasRef","ref","current","initmouseMoeListener","mouseMoveListener","e","point","computePointInCanvas","clientX","clientY","ctx","getContext","onDraw9","console","log","window","addEventListener","boundingRect","getBoundingClientRect","x","left","y","top"],"sources":["/Users/adambergstrom/Documents/Prime FS Engineering/Prime Tier 2/Week 8/canvas-drawing/canvas-drawing/src/Components/Hooks.js"],"sourcesContent":["import { useRef } from \"react\";\n\nexport function useOnDraw(onDraw) {\n\n    const canvasRef = useRef(null);\n\n    function setCanvasRef(ref) {\n        if(!ref) return;\n        canvasRef.current = ref;\n        initmouseMoeListener();\n    }\n\n    function initmouseMoeListener(){\n        const mouseMoveListener = (e) => {\n            // console.log({ x : e.clientX, y : e.clientY});\n            const point = computePointInCanvas(e.clientX, e.clientY);\n            const ctx = canvasRef.current.getContext('2d');\n            if(onDraw) onDraw9\n            console.log(point);\n        }\n        window.addEventListener(\"mousemove\", mouseMoveListener);\n    }\n\n    function computePointInCanvas(clientX, clientY) {\n        if(canvasRef.current){\n\n        const boundingRect = canvasRef.current.getBoundingClientRect();\n        return{\n            x : clientX - boundingRect.left ,\n            y : clientY - boundingRect.top\n        }\n    } else {\n        return null;\n    }\n    }\n\n    return setCanvasRef;\n\n}"],"mappings":";AAAA,SAASA,MAAM,QAAQ,OAAO;AAE9B,OAAO,SAASC,SAAS,CAACC,MAAM,EAAE;EAAA;EAE9B,MAAMC,SAAS,GAAGH,MAAM,CAAC,IAAI,CAAC;EAE9B,SAASI,YAAY,CAACC,GAAG,EAAE;IACvB,IAAG,CAACA,GAAG,EAAE;IACTF,SAAS,CAACG,OAAO,GAAGD,GAAG;IACvBE,oBAAoB,EAAE;EAC1B;EAEA,SAASA,oBAAoB,GAAE;IAC3B,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;MAC7B;MACA,MAAMC,KAAK,GAAGC,oBAAoB,CAACF,CAAC,CAACG,OAAO,EAAEH,CAAC,CAACI,OAAO,CAAC;MACxD,MAAMC,GAAG,GAAGX,SAAS,CAACG,OAAO,CAACS,UAAU,CAAC,IAAI,CAAC;MAC9C,IAAGb,MAAM,EAAEc,OAAO;MAClBC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;IACtB,CAAC;IACDS,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEZ,iBAAiB,CAAC;EAC3D;EAEA,SAASG,oBAAoB,CAACC,OAAO,EAAEC,OAAO,EAAE;IAC5C,IAAGV,SAAS,CAACG,OAAO,EAAC;MAErB,MAAMe,YAAY,GAAGlB,SAAS,CAACG,OAAO,CAACgB,qBAAqB,EAAE;MAC9D,OAAM;QACFC,CAAC,EAAGX,OAAO,GAAGS,YAAY,CAACG,IAAI;QAC/BC,CAAC,EAAGZ,OAAO,GAAGQ,YAAY,CAACK;MAC/B,CAAC;IACL,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACA;EAEA,OAAOtB,YAAY;AAEvB;AAAC,GApCeH,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef } from \"react\";\nexport function useOnDraw(onDraw) {\n  _s();\n  const canvasRef = useRef(null);\n  const isDrawingRef = useRef(false);\n  const mouseMoveListenerRef = useRef(null);\n  const mouseDownListenerRef = useRef(null);\n  const mouseUpListenerRef = useRef(null);\n  function setCanvasRef(ref) {\n    if (!ref) return;\n    canvasRef.current = ref;\n    initmouseMoeListener();\n    initMouseDownListener();\n    initMouseUpListener();\n  }\n  function initmouseMoeListener() {\n    const mouseMoveListener = e => {\n      if (isDrawingRef.current) {\n        // console.log({ x : e.clientX, y : e.clientY});\n        const point = computePointInCanvas(e.clientX, e.clientY);\n        const ctx = canvasRef.current.getContext('2d');\n        if (onDraw) onDraw(ctx, point);\n        console.log(point);\n      }\n    };\n    mouse;\n    window.addEventListener(\"mousemove\", mouseMoveListener);\n  }\n  function initMouseUpListener() {\n    const listener = () => {\n      isDrawingRef.current = false;\n    };\n    window.addEventListener(\"mouseup\", listener);\n  }\n  function initMouseDownListener() {\n    if (!canvasRef.current) return;\n    const listener = () => {\n      isDrawingRef.current = true;\n    };\n    canvasRef.current.addEventListener(\"mousedown\", listener);\n  }\n  function computePointInCanvas(clientX, clientY) {\n    if (canvasRef.current) {\n      const boundingRect = canvasRef.current.getBoundingClientRect();\n      return {\n        x: clientX - boundingRect.left,\n        y: clientY - boundingRect.top\n      };\n    } else {\n      return null;\n    }\n  }\n  return setCanvasRef;\n}\n_s(useOnDraw, \"/tQ9g4LYwAwmLqgomH+W7w+EkwY=\");","map":{"version":3,"names":["useRef","useOnDraw","onDraw","canvasRef","isDrawingRef","mouseMoveListenerRef","mouseDownListenerRef","mouseUpListenerRef","setCanvasRef","ref","current","initmouseMoeListener","initMouseDownListener","initMouseUpListener","mouseMoveListener","e","point","computePointInCanvas","clientX","clientY","ctx","getContext","console","log","mouse","window","addEventListener","listener","boundingRect","getBoundingClientRect","x","left","y","top"],"sources":["/Users/adambergstrom/Documents/Prime FS Engineering/Prime Tier 2/Week 8/canvas-drawing/canvas-drawing/src/Components/Hooks.js"],"sourcesContent":["import { useRef } from \"react\";\n\nexport function useOnDraw(onDraw) {\n\n    const canvasRef = useRef(null);\n    const isDrawingRef = useRef(false);\n\n    const mouseMoveListenerRef = useRef(null);\n    const mouseDownListenerRef = useRef(null);\n    const mouseUpListenerRef = useRef(null);\n\n    function setCanvasRef(ref) {\n        if(!ref) return;\n        canvasRef.current = ref;\n        initmouseMoeListener();\n        initMouseDownListener();\n        initMouseUpListener();\n    }\n\n    function initmouseMoeListener(){\n        const mouseMoveListener = (e) => {\n            if(isDrawingRef.current){\n                // console.log({ x : e.clientX, y : e.clientY});\n                const point = computePointInCanvas(e.clientX, e.clientY);\n                const ctx = canvasRef.current.getContext('2d');\n                if(onDraw) onDraw(ctx, point);\n                console.log(point);\n            }\n        }\n        mouse\n        window.addEventListener(\"mousemove\", mouseMoveListener);\n    }\n\n    function initMouseUpListener() {\n        const listener = () => {\n            isDrawingRef.current = false;\n        }\n        window.addEventListener(\"mouseup\", listener)\n    }\n\n    function initMouseDownListener(){\n        if(!canvasRef.current) return;\n        const listener = () => {\n            isDrawingRef.current = true;\n\n        }\n        canvasRef.current.addEventListener(\"mousedown\", listener);\n    }\n\n    function computePointInCanvas(clientX, clientY) {\n        if(canvasRef.current){\n\n        const boundingRect = canvasRef.current.getBoundingClientRect();\n        return{\n            x : clientX - boundingRect.left ,\n            y : clientY - boundingRect.top\n        }\n    } else {\n        return null;\n    }\n    }\n\n    return setCanvasRef;\n\n}"],"mappings":";AAAA,SAASA,MAAM,QAAQ,OAAO;AAE9B,OAAO,SAASC,SAAS,CAACC,MAAM,EAAE;EAAA;EAE9B,MAAMC,SAAS,GAAGH,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMI,YAAY,GAAGJ,MAAM,CAAC,KAAK,CAAC;EAElC,MAAMK,oBAAoB,GAAGL,MAAM,CAAC,IAAI,CAAC;EACzC,MAAMM,oBAAoB,GAAGN,MAAM,CAAC,IAAI,CAAC;EACzC,MAAMO,kBAAkB,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEvC,SAASQ,YAAY,CAACC,GAAG,EAAE;IACvB,IAAG,CAACA,GAAG,EAAE;IACTN,SAAS,CAACO,OAAO,GAAGD,GAAG;IACvBE,oBAAoB,EAAE;IACtBC,qBAAqB,EAAE;IACvBC,mBAAmB,EAAE;EACzB;EAEA,SAASF,oBAAoB,GAAE;IAC3B,MAAMG,iBAAiB,GAAIC,CAAC,IAAK;MAC7B,IAAGX,YAAY,CAACM,OAAO,EAAC;QACpB;QACA,MAAMM,KAAK,GAAGC,oBAAoB,CAACF,CAAC,CAACG,OAAO,EAAEH,CAAC,CAACI,OAAO,CAAC;QACxD,MAAMC,GAAG,GAAGjB,SAAS,CAACO,OAAO,CAACW,UAAU,CAAC,IAAI,CAAC;QAC9C,IAAGnB,MAAM,EAAEA,MAAM,CAACkB,GAAG,EAAEJ,KAAK,CAAC;QAC7BM,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;MACtB;IACJ,CAAC;IACDQ,KAAK;IACLC,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEZ,iBAAiB,CAAC;EAC3D;EAEA,SAASD,mBAAmB,GAAG;IAC3B,MAAMc,QAAQ,GAAG,MAAM;MACnBvB,YAAY,CAACM,OAAO,GAAG,KAAK;IAChC,CAAC;IACDe,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEC,QAAQ,CAAC;EAChD;EAEA,SAASf,qBAAqB,GAAE;IAC5B,IAAG,CAACT,SAAS,CAACO,OAAO,EAAE;IACvB,MAAMiB,QAAQ,GAAG,MAAM;MACnBvB,YAAY,CAACM,OAAO,GAAG,IAAI;IAE/B,CAAC;IACDP,SAAS,CAACO,OAAO,CAACgB,gBAAgB,CAAC,WAAW,EAAEC,QAAQ,CAAC;EAC7D;EAEA,SAASV,oBAAoB,CAACC,OAAO,EAAEC,OAAO,EAAE;IAC5C,IAAGhB,SAAS,CAACO,OAAO,EAAC;MAErB,MAAMkB,YAAY,GAAGzB,SAAS,CAACO,OAAO,CAACmB,qBAAqB,EAAE;MAC9D,OAAM;QACFC,CAAC,EAAGZ,OAAO,GAAGU,YAAY,CAACG,IAAI;QAC/BC,CAAC,EAAGb,OAAO,GAAGS,YAAY,CAACK;MAC/B,CAAC;IACL,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACA;EAEA,OAAOzB,YAAY;AAEvB;AAAC,GA9DeP,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}